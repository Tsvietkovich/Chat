import com.google.gson.Gson;
import com.google.gson.GsonBuilder;

import java.io.*;
import java.net.*;
import java.nio.charset.StandardCharsets;
import java.time.LocalTime;
import java.util.Date;

public class Client {

    private String login;
    private String password;
    private String status;
    private final Gson gson = new GsonBuilder().create();

    public Client(String login, String password) {
        this.login = login;
        this.password = password;
    }


    public int logInToServer (String url) throws IOException {
        URL obj = new URL(url);
        HttpURLConnection conn = (HttpURLConnection) obj.openConnection();

        conn.setRequestMethod("POST"); // into LoginServlet
        conn.setDoOutput(true);
        OutputStream os = conn.getOutputStream();
        try {
            String json = toJSON();
            os.write(json.getBytes(StandardCharsets.UTF_8));
            return conn.getResponseCode();
        } finally {
            os.close();
        }
    }

    public void getListOfClients(String login) {
        try {
            URL url = new URL(Utils.getURL() + "/clients?login=" + login);
            HttpURLConnection http = (HttpURLConnection) url.openConnection();
            InputStream is = http.getInputStream();
            try { // to GetOnlineClientsServlet
                byte[] buf = requestBodyToArray(is);
                String strBuf = new String(buf, StandardCharsets.UTF_8);
                JsonClients list = gson.fromJson(strBuf, JsonClients.class);
                if (list != null) {
                    for (Client c : list.getList()) {
                        System.out.println(c);
                    }
                }
            } finally {
                is.close();
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    public Client(String login){
        this.login = login;
    }

    public String getLogin() {
        return login;
    }

    public void setLogin(String login) {
        this.login = login;
    }

    public String getPassword() {
        return password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    public String getStatus(){
        return status;
    }

    public void setStatus(String status) {
        this.status = status;
    }



    @Override
    public String toString() {
        return new StringBuilder().append("[").append(login)
                .append(", Status: ").append(status)
                .append("] ").toString();

    }
    public String toJSON() {
        Gson gson = new GsonBuilder().create();
        return gson.toJson(this);
    }

    public static Client fromJSON(String s) {
        Gson gson = new GsonBuilder().create();
        return gson.fromJson(s, Client.class);
    }

    private byte[] requestBodyToArray(InputStream is) throws IOException {
        ByteArrayOutputStream bos = new ByteArrayOutputStream();
        byte[] buf = new byte[10240];
        int r;

        do {
            r = is.read(buf);
            if (r > 0) bos.write(buf, 0, r);
        } while (r != -1);

        return bos.toByteArray();
    }
}
